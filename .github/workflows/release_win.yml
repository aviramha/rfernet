name: Release Win
on:
  workflow_dispatch:
  release:
    types: [published, edited]
  push:
    tags:
      - '*.*.*'


jobs:
  release_windows:
    name: Release Windows (x86_64)

    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - uses: dtolnay/rust-toolchain@stable

      - name: Install OpenSSL via vcpkg  # install just once
        run: |
          vcpkg install openssl:x64-windows-static-md
          vcpkg integrate install

#==================================================================

      - name: Set up Python 3.8
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

#==================================================================

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

#==================================================================

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

#==================================================================

      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

#==================================================================

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

#==================================================================

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip wheel twine
          pip install -r requirements.txt

      - name: Build wheels with maturin
        run: |
          maturin build --release --strip -i python --target x86_64-pc-windows-msvc

      - name: Install built package
        run: |
          pip install rfernet --no-index --find-links target/wheels

      - name: Run tests
        run: |
          pytest tests/

#==================================================================

      - name: Upload combined wheels
        uses: actions/upload-artifact@v4
        with:
          name: rfernet-win-pack-all
          path: ./target/wheels/*.whl

      - name: Update GitHub Release
        if: github.event_name == 'release'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.release.tag_name }}
          name: ${{ github.event.release.name }}
          draft: false
          prerelease: false
          files: |
            ./target/wheels/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload wheels to PyPI
        run: twine upload --non-interactive --skip-existing ./target/wheels/*
        env:
          TWINE_PASSWORD: ${{secrets.TWINE_PASSWORD}}
          TWINE_USERNAME: ${{secrets.TWINE_USERNAME}}
